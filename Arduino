#!/usr/bin/env python3
import serial,time,os
class Serial:
	if os.name=='nt':
		def __init__(self,port="COM1",baud=9600,stopbit=serial.STOPBITS_TWO,time=0,lt='\n'):
			self.arduino=serial.Serial(port,baud,timeout=time,stopbits=stopbit)
			self.lt=lt
			self.out=''
	else:
		def __init__(self,port="/dev/ttyUSB0",baud=9600,stopbit=serial.STOPBITS_TWO,time=0,lt='\n'):
			self.arduino=serial.Serial(port,baud,timeout=time,stopbits=stopbit)
			self.lt=lt
			self.out=''
	def __enter__(self):
		return self
	
	def sendFile(self,path):
		out=''
		while self.arduino.inWaiting() > 0:
			out += self.arduino.read(1).decode('utf-8')
		if out != '':
			print(out,end='')
		
		with open(path,"r") as f:
			a=f.read().splitlines()
			print(a)
			for n in a:
				cmd=bytes(n+self.lt,'utf-8')
				self.arduino.write(cmd)
				out = ''
				time.sleep(1)
				while self.arduino.inWaiting() > 0:
					out += self.arduino.read(1).decode('utf-8')
				if out != '':
					print(out,end='')

	def send(self,*cmd):
		if cmd !=[]:
			for n in cmd:
				self.arduino.write(bytes(n+self.lt,'utf-8'))
				time.sleep(1)
				while self.arduino.inWaiting() > 0:
					self.out += self.arduino.read(1).decode('utf-8')
	def recieve(self):
		r=(self.out + '.')[:-1]
		self.out=''
		return r
	def __del__(self):
		if self.arduino != None :
			self.arduino.close()
if __name__=="__main__":
	import sys
	if len(sys.argv)>1:
		exe=Serial()
		exe.sendFile(sys.argv[1])
		
